{"version":3,"sources":["getFocusedRouteNameFromRoute.tsx"],"names":["SUPPRESS_STATE_ACCESS_WARNING","getFocusedRouteNameFromRoute","route","value","state","params","routeName","routes","index","type","length","name","screen","undefined"],"mappings":"AAKA,SAASA,6BAAT,QAA8C,iBAA9C;AAEA,eAAe,SAASC,4BAAT,CACbC,KADa,EAEO;AAAA;;AACpBF,EAAAA,6BAA6B,CAACG,KAA9B,GAAsC,IAAtC;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AAEAJ,EAAAA,6BAA6B,CAACG,KAA9B,GAAsC,KAAtC;AAEA,QAAME,MAAM,GAAGH,KAAK,CAACG,MAArB;AAEA,QAAMC,SAAS,GAAGF,KAAK,GACnB;AACAA,EAAAA,KAAK,CAACG,MAAN,CACE;AACA;AAFF,kBAGEH,KAAK,CAACI,KAHR,uDAIK,OAAOJ,KAAK,CAACK,IAAb,KAAsB,QAAtB,IAAkCL,KAAK,CAACK,IAAN,KAAe,OAAjD,GACG,CADH,GAEGL,KAAK,CAACG,MAAN,CAAaG,MAAb,GAAsB,CAN9B,EAOEC,IATiB,GAUnB;AACF,UAAON,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEO,MAAf,MAA0B,QAA1B,GACEP,MAAM,CAACO,MADT,GAEEC,SAbJ;AAeA,SAAOP,SAAP;AACD","sourcesContent":["import type {\n  Route,\n  PartialState,\n  NavigationState,\n} from '@react-navigation/routers';\nimport { SUPPRESS_STATE_ACCESS_WARNING } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>> & { state?: PartialState<NavigationState> }\n): string | undefined {\n  SUPPRESS_STATE_ACCESS_WARNING.value = true;\n\n  const state = route.state;\n\n  SUPPRESS_STATE_ACCESS_WARNING.value = false;\n\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n"]}