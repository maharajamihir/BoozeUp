{"version":3,"sources":["useLinking.native.tsx"],"names":["React","Linking","Platform","getActionFromState","getStateFromPath","getStateFromPathDefault","escapeStringRegexp","isUsingLinking","useLinking","ref","enabled","prefixes","config","getInitialURL","Promise","race","resolve","setTimeout","subscribe","listener","callback","url","addEventListener","removeEventListener","useEffect","Error","OS","join","trim","enabledRef","useRef","prefixesRef","configRef","getInitialURLRef","getStateFromPathRef","current","extractPathFromURL","useCallback","prefix","protocol","match","host","replace","prefixRegex","RegExp","split","map","it","test","undefined","getInitialState","path","navigation","state","rootState","getRootState","routes","some","r","routeNames","includes","name","console","warn","action","dispatch","e","message","resetRoot"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Linking, Platform } from 'react-native';\nimport {\n  getActionFromState,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport type { LinkingOptions } from './types';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    prefixes,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      Linking.addEventListener('url', callback);\n\n      return () => Linking.removeEventListener('url', callback);\n    },\n    getStateFromPath = getStateFromPathDefault,\n  }: LinkingOptions\n) {\n  React.useEffect(() => {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n  }, [config, enabled, prefixes, getInitialURL, getStateFromPath]);\n\n  const extractPathFromURL = React.useCallback((url: string) => {\n    for (const prefix of prefixesRef.current) {\n      const protocol = prefix.match(/^[^:]+:\\/\\//)?.[0] ?? '';\n      const host = prefix.replace(protocol, '');\n      const prefixRegex = new RegExp(\n        `^${escapeStringRegexp(protocol)}${host\n          .split('.')\n          .map((it) => (it === '*' ? '[^/]+' : escapeStringRegexp(it)))\n          .join('\\\\.')}`\n      );\n      if (prefixRegex.test(url)) {\n        return url.replace(prefixRegex, '');\n      }\n    }\n\n    return undefined;\n  }, []);\n\n  const getInitialState = React.useCallback(async () => {\n    if (!enabledRef.current) {\n      return undefined;\n    }\n\n    const url = await getInitialURLRef.current();\n    const path = url ? extractPathFromURL(url) : null;\n\n    if (path) {\n      return getStateFromPathRef.current(path, configRef.current);\n    } else {\n      return undefined;\n    }\n  }, [extractPathFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const path = extractPathFromURL(url);\n      const navigation = ref.current;\n\n      if (navigation && path) {\n        const state = getStateFromPathRef.current(path, configRef.current);\n\n        if (state) {\n          // Make sure that the routes in the state exist in the root navigator\n          // Otherwise there's an error in the linking configuration\n          const rootState = navigation.getRootState();\n\n          if (\n            state.routes.some((r) => !rootState?.routeNames.includes(r.name))\n          ) {\n            console.warn(\n              \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n            );\n            return;\n          }\n\n          const action = getActionFromState(state, configRef.current);\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${e.message}`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, ref, subscribe, extractPathFromURL]);\n\n  return {\n    getInitialState,\n  };\n}\n"]}