{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","View","Animated","StyleSheet","Platform","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","BottomTabBarHeightCallbackContext","useWindowDimensions","useIsKeyboardShown","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","shouldUseHorizontalLabels","state","layout","dimensions","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","colors","buildLink","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","setLayout","handleLayout","e","nativeEvent","topBorderWidth","styles","tabBar","borderTopWidth","defaultInsets","top","right","left","tabBarHeight","hasHorizontalLabels","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","tabBarBadgeStyle","create","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const topBorderWidth =\n      // @ts-ignore\n      StyleSheet.flatten([styles.tabBar, style])?.borderTopWidth;\n\n    onHeightChange?.(\n      height +\n        paddingBottom +\n        (typeof topBorderWidth === 'number' ? topBorderWidth : 0)\n    );\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}